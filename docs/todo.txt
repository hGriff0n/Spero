Organize Documentation Correctly Among the Files
  Figure out what to do with 'syntax.txt' (and grammar decisions)
  Read up on the c++ standard to get an idea for how they layout everything
Double check that the rebind rules allow for aliasing junction types
  Allow this if it is not currently implemented
Determine if the speroc grammar allows for placing `mut` on forwarded function bodies
Figure out the type system and prove that it "works"
  Also make sure I can use the 'MLSub' paper for the inference
Work on the semantics/syntax of metaprogramming

Extend "Mut Rules" to include working with values and function calling
Figure out whether references should be capturable by closures
  Check to see how much of the design relies on implicit lifetime checking
Analyze the ability to correctly perform dot-flipping and solve the expression problem through it
Figure out how concurrency should be handled within Spero
  Should 'yield' without a 'wait' equate to a straight return?
Test whether ref matching (ie. 'mut&') can allow for modifying structures through for loops
Look into ways of "subtyping" dependent types (ie. Array[T, n < 5] - all arrays of any type where the length < 5)
Work on the variance rules (especially in relation to and/or types)
Look into quick ways to create/handle tests and documentation from within Spero
Improve the documentation of 'Assignment', especially in regards to variable shadowing
  Some of the information is confusing or even just plain wrong
Determine whether to keep in 'implicit construction'
Figure out how to abstact away 'mut'/'&' from code that doesn't care about it
Fix the coloring of 'rebind' statements in vs-spero
  Types should be colored as Types