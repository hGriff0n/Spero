def Foo[T, V, where T == V.type] = ...

def Foo[T, V :: T == V.type] = ...

def Foo[T, V where V.type == T] = ...

def Foo[T, V] where V.type == T = ...

docopt:Arg{ "-db", String }     # for constructing a type, use '{}' ???

def foo = () -> :: T { ... }