mod celeb

use std:util:Array as Set

def Person = Nobody | Somebody(String) {
    let know_list = mut Set[Person]

    @mutable
    def setKnowList = (s :: Set[Person]) -> know_list = s

    def knows = (p :: Person) -> (self, p).match {
        Nobody, _ -> false
        _, Nobody -> false
        _ -> know_list.contains(p)
    }

    static == = (Person, Person) -> .match {
        Somebody(n1), Somebody(n2) -> n1 == n2
        _, _ -> false
    }
}

# Determine if Person a is a celebrity in relation to Person b
def getLocalCeleb = (Person, Person) -> .match {
    Nobody, next -> next
    curr, next -> {
        if !next.knows(curr) || curr.knows(next) next
        else curr
    }
}

##
Given a collection of People (an Iterable[Person], or Person*)
Determine whether a celebrity exists
##
def celebrity[n] = (group :: Person*) -> {
    let fceleb = group.reduce(Nobody, getLocalCeleb)
    let bceleb = group.reverse.reduce(Nobody, getLocalCeleb)

    fceleb == bceleb
}